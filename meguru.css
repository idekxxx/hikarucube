/* この立方体は回を六面につけた形のものです */
.square {
    width: 200px;
    height: 200px; 
    border:5px solid white; 
    display: flex; /*ブロックレベルのフレックスコンテナボックスを生成する*/
    justify-content: center; 
    align-items: center; 
 }
 .square2 {
    width: 100px; /* 内側正方形幅 */
    height: 100px;  /* 内側正方形高 */
    animation: gamingcolor 1s linear 0s infinite none normal running;
 }
 @keyframes gamingcolor{
  0%{
    border: 10px solid red;
  }
  20%{
    border: 10px solid purple;
  }
  40%{
    border: 10px solid blue;
  }
  60%{
    border: 10px solid green;
  }
  80%{
    border: 10px solid yellow;
  }
  100%{
    border: 10px solid orangered;
  }
 }

 /* ここで立方体にする */
 #cube {
    perspective: 1000px; /*3D変形の奥行きの深さを指定する*/
    width: 200px; /*幅を指定する*/
    height: 200px; /*高さを指定する*/
    position: relative; /*ボックスの配置方法（基準位置）を指定する　 相対位置*/
    top: 50vh; /*上からの配置位置（距離）を指定する*/
    left: 50vw; /*左からの配置位置（距離）を指定する*/
    transform:translateX(-50%) translateY(-50%); /*要素に2D変形、または、3D変形を適用する*/
  }
  .boxBase {
    transform-origin: 50%; /*2D変形、または、3D変形の原点を指定する*/
    transform-style:preserve-3d; /*子要素がフラットに描画されるか立体的に描画されるかを指定する*/
    width:200px;
    height:200px;
    /*アニメーションについてまとめて指定する*/
    animation: turnAround 4s linear 0s infinite none normal running;
  }
  @keyframes turnAround {
    0%{
      transform:rotateX(360deg) rotateY(0deg);
    }
    100%{
      transform:rotateX(0deg) rotateY(360deg);
    }
  }
  .boxBase > div {
    position:absolute;
    /*border:5px solid black;*/
    animation: gamingcolor 1s linear 0s infinite none normal running;
 }
 @keyframes gamingcolor{
  0%{
    border: 10px solid red;
  }
  20%{
    border: 10px solid purple;
  }
  40%{
    border: 10px solid blue;
  }
  60%{
    border: 10px solid green;
  }
  80%{
    border: 10px solid yellow;
  }
  100%{
    border: 10px solid orangered;
  }
  }
  .boxBase > .top {
    transform:translateY(100px) rotateX(-90deg);
  }
  .boxBase > .bottom {
    transform:translateY(-100px) rotateX(90deg);
  }
  .boxBase > .front {
    transform:translateZ(100px);
  }
  .boxBase > .back {
    transform:translateZ(-100px) rotateX(180deg);
  }
  .boxBase > .left {
    transform:translateX(-100px) rotateY(-90deg);
  }
  .boxBase > .right {
    transform:translateX(100px) rotateY(90deg);
  }